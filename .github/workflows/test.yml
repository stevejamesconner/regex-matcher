name: 'build-test'
on:
  pull_request:
  push:
    branches:
      - main
      - 'feature/*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set Node.js 16.x
        uses: actions/setup-node@v3.5.1
        with:
          node-version: 16.x

      - run: |
          npm install

      - run: |
          npm run all
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set Node.js 16.x
        uses: actions/setup-node@v3.5.1
        with:
          node-version: 16.x

      - name: Extract Version From Branch
        uses: ./
        id: extractBranchVersion
        with:
          regex: '\d+'
          data: 'v1/develop'

      - name: Fail If Regex Extraction Is Empty
        if: ${{ steps.extractBranchVersion.outputs.m1 == '' }}
        uses: actions/github-script@v3
        with:
          script: core.setFailed('Extracted regex was not present in the output!')

      - name: Dump Regex Extractions
        shell: bash
        run: |
          echo ${{ steps.extractBranchVersion.outputs.m1 }}
          echo ${{ steps.extractBranchVersion.outputs.allMatches }}

      - name: Extract Version From Semver
        uses: ./
        id: extractSemanticVersion
        with:
          regex: '(\d+).'
          data: '2.3.4'

      - name: Fail If Regex Extraction Is Empty
        if: ${{ steps.extractSemanticVersion.outputs.m1 == '' && steps.extractSemanticVersion.outputs.m2 == '' }}
        uses: actions/github-script@v3
        with:
          script: core.setFailed('Extracted regex was not present in the output!')

      - name: Dump Regex Extractions
        shell: bash
        run: |
          echo ${{ steps.extractSemanticVersion.outputs.m1 }}
          echo ${{ steps.extractSemanticVersion.outputs.m1g1 }}
          echo ${{ steps.extractSemanticVersion.outputs.m2 }}
          echo ${{ steps.extractSemanticVersion.outputs.m2g1 }}
          echo ${{ steps.extractSemanticVersion.outputs.allMatches }}